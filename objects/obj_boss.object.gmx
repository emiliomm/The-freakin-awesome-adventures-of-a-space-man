<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_heroe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemigo</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = -1;

///Crear variables
dir = -1; 
msp = 3;
jsp = 5.5;
grav = 0.2;
hsp = 0;
vsp = 0;
vida = 10;
disparo = 0;
invencible = 0;

tiempo_disparo = 40;//n/Fps
tiempo_salto = 40;
tiempo_invencible = 50;
tiempo_disparado = 26; //Inmovil
alarm[0] = tiempo_disparo + 20;
alarm[1] = tiempo_salto;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Puntuación
global.puntuacion += 2000;


instance_create(x,y,obj_nv4);

//Música
if (!sound_isplaying(msc_boss) &amp;&amp; global.sound != 0)
    sound_stop(msc_boss);
if (global.sound != 0)
    sound_loop(msc_boss_defeat);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Invencible
invencible = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Diparado
disparo = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Doble salto

//Comprueba si hay algún pincho visible. Si lo hay, no salta
var i, salto = true;
for (i = 0; i &lt; instance_number(obj_pinchos_intermitentes); i += 1)
{
    enemy = instance_find(obj_pinchos_intermitentes,i);
    if enemy.pinvisible == 1
        salto = false;
}

if instance_exists(obj_heroe) &amp;&amp; salto = true
{       
    vsp = -jsp;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Salto

//Comprueba si hay algún pincho visible. Si lo hay, no salta
var i, salto = true;
for (i = 0; i &lt; instance_number(obj_pinchos_intermitentes); i += 1)
{
    enemy = instance_find(obj_pinchos_intermitentes,i);
    if enemy.pinvisible == 1
        salto = false;
}

if (instance_exists(obj_heroe)) &amp;&amp; salto = true &amp;&amp; place_meeting(x,y+1,obj_bloque)
{
    //Si el heroe está encima, siempre salta
    if (obj_heroe.y &lt; y)
    {
        vsp = -jsp;
    }
    //Sino, hay un 50% de probabilidades de que salte
    else
    {
        switch (irandom(1))
        {
            case 0: 
            vsp = -jsp;
            break;
        }
    }
    //Doble salto
    if (vsp == -jsp)
    {
        //Si ha saltado, hay un 50% de posibilidades de que haga un doble salto
        switch (irandom(1))
        {
                case 0: 
                alarm[2] = tiempo_salto - 10; //Doble salto
                break;
        }
    }
}
    
alarm[1] = tiempo_salto; //Salto
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Disparo
if (disparo == 0)
{
    with (instance_create(x, y, obj_bala_enemiga))
    {
                    sound_play(snd_disparo);
                    speed = 8;
                    if (obj_boss.dir == 1)
                    {
                        image_xscale = 1;
                        direction = 0;
                    }
                    else
                    {
                        image_xscale = -1;
                        direction = 180;
                    }
    }
}

alarm[0] = tiempo_disparo;
        
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mask_index = spr_heroe;
image_xscale = dir;

hsp = dir * msp;
vsp += grav;

if (disparo == 1)
{
    hsp = 0;
    vsp = 0;
}
        
//Colisión horizontal
if (place_meeting(x+hsp,y, obj_bloque)) || (place_meeting(x+hsp,y, obj_bloque_invisible)) &amp;&amp; (muerto == 0) //Con el bloque
{
    while(!place_meeting(x+sign(hsp),y,obj_bloque) &amp;&amp; !place_meeting(x+sign(hsp),y,obj_bloque_invisible)) //sign -1 o +1. Si no hay un muro a la derecha o a la izquierda
        x += sign(hsp); //Nos movemos
    hsp = 0;
    
    dir *= -1; //Si nos chocamos con un muro, nos movemos en dirección contraria
}

x += hsp;

//Colision pinchos
if instance_exists(obj_heroe)
{
    if place_meeting(x,y,obj_pinchos) &amp;&amp; invencible == 0
    {
        vida--;
        alarm[3] = tiempo_disparado; //Disparado (inmovil) Tiempo(seg = n/fps)
        alarm[4] = tiempo_invencible; //Invencible Tiempo(seg = n/fps)
        disparo = 1;
        invencible = 1;
    } //Colision con pinchos de lado, los salta
    else if (place_meeting(x+10,y,obj_pinchos) || place_meeting(x-10,y,obj_pinchos)) &amp;&amp; disparo == 0 &amp;&amp; obj_heroe.y &lt; y
    {
        vsp = -jsp;
    }
}

//Salto en pared
if instance_exists(obj_heroe)
    if (place_meeting(x-1,y,obj_bloque) || place_meeting(x+1,y,obj_bloque)) &amp;&amp; invencible == 0 &amp;&amp; !place_meeting(x,y+1,obj_bloque) &amp;&amp; obj_heroe.y &lt; y
            vsp = -jsp;

//Colisión vertical
if (place_meeting(x,y+vsp,obj_bloque)) || (place_meeting(x,y+vsp,obj_bloque_invisible)) &amp;&amp; (muerto == 0)
{
    while(!place_meeting(x,y+sign(vsp),obj_bloque) &amp;&amp; !place_meeting(x,y+sign(vsp),obj_bloque_invisible)) //Si no hay nada arriba o abajo
        y += sign(vsp); //Nos movemos
    vsp = 0;
}

y += vsp;

//Animación
if (disparo == 0)
{
    if (invencible == 0)
    {
        if (place_meeting(x,y+1,obj_bloque))
        {
            if (hsp != 0)
            {
                    sprite_index = spr_heroe_correr;
                    image_speed = 1/4;
            }
            else
                    sprite_index = spr_heroe;
        }
        else
        {
            if (vsp &lt; 0) //estamos saltando
                sprite_index = spr_heroe_salto;
            else
                sprite_index = spr_heroe_cae;
        }
    }
    else
    {
        if (place_meeting(x,y+1,obj_bloque))
        {
            if (hsp != 0)
            {
                    sprite_index = spr_boss_correr_invencible;
                    image_speed = 1/4;
            }
            else
                    sprite_index = spr_boss_invencible;
        }
        else
        {
            if (vsp &lt; 0) //estamos saltando
                sprite_index = spr_boss_salto_invencible;
            else
                sprite_index = spr_boss_cae_invencible;
        }
    }
}
else
    sprite_index = spr_boss_disparado;
    

if (vida == 0)
{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//Vida
pc = (vida / 10) * 100; //Porcentaje (vida/maxvida)*100
draw_set_font(fnt_pause_small);
draw_text(view_xview[view_current]+20,view_yview[view_current]+440, "Boss");
draw_healthbar(view_xview[view_current]+20,view_yview[view_current]+455,view_xview[view_current]+620,view_yview[view_current]+460 ,pc,c_black,c_green,c_green,0,true,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
