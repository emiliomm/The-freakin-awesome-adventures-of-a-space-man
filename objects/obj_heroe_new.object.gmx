<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_heroe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicializar las variables

grav = 0.2; //0.2 , cuanto más alta, menos alto salta
hsp = 0; //Velocidad horizontal
hsp_carry = 0; //Velocidad de la plataforma móvil (si va montado)
vsp = 0; //Velocidad vertical
vsp_carry = 0; //Sin usar

msp_normal = 4; //Velocidad de movimiento
msp_pwfantasma = 2; //Velocidad de movimiento fantasma
msp_pwveloz = 8 //Velocidad de movimiento powerup velocidad
msp_pwastro = 1.5; //Velocidad de movimiento del pwastro
msp_pwagua_tierra = 1; //Velocidad de movimiento del pwagua caminando en el suelo

msp = msp_normal;

jsp_normal = 5; //Velocidad de salto
jsp_pwsalto = 6; //Velocidad de salto con powerup salto
jsp_pwastro = 2; //Velocidad de salto con powerup astro
jsp_pwfantasma = 4; //Velocidad de salto con powerup fantasma
jsp_pwagua = 2; //Velocidad de salto con powerup agua

jsp = jsp_normal;

direccion = 0; //Utilizada al disparar
powerup_activo = 0; //Powerup activo, para cambiar el sprite
tecla_abajo = 0; //La iniciamos a 0 porque va a ser necesario acceder desde otro objeto
escalera = false;
invencible = 0; //Al darle o hacer algo, el personaje no reacciona a nada unos pocos segundos

if (global.checkpointR == room)
{
    x = global.checkpointx;
    y = global.checkpointy;
}

depth = -5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Invencible
invencible = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Powerup acabado
jsp = jsp_normal; //Velocidad de salto normal
msp = msp_normal; //Velocidad de movimiento normal
sprite_index = spr_heroe; //Vuelve al sprite normal
powerup_activo = 0; //Ningun poder activo
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Soporte joystick
if (global.joystick1_supported) { scr_joystick_support(); }

//Botones pulsados y gamepad
tecla_derecha = keyboard_check(ord("D")); // (0 a 1)
tecla_izquierda = -keyboard_check(ord("A")); // (0 a -1)
tecla_salto = keyboard_check_pressed(ord("W"));
tecla_arriba = keyboard_check(ord("W"));
tecla_abajo = keyboard_check(ord("S"));
tecla_disparo = keyboard_check_pressed(vk_space) || mouse_check_button_released(mb_left);

//Reacción a las teclas
movimiento = tecla_izquierda + tecla_derecha; //Dice la dirección del movimiento

hsp = movimiento *  msp;

if (keyboard_check(ord("D"))) //Cambiamos la dirección utilizada para el disparo
    direccion = 0;
if (keyboard_check(ord("A")))
    direccion = 180;
    
if (powerup_activo == 3)
    grav = 0.025;
else if (powerup_activo == 5)
    grav = 0.05;

if(vsp &lt; 10 &amp;&amp; (powerup_activo != 3 || powerup_activo != 5)) // Para que el salto no sea infinito
    vsp += grav;
else if (vsp &lt; 1 &amp;&amp; powerup_activo == 5) //Si lleva el powerup agua, cae más lento
    vsp += grav;
else if (vsp &lt; 1 &amp;&amp; powerup_activo == 3) //Si lleva el powerup espacio, cae más lento
    vsp += grav;
    
var hsp_final = hsp + hsp_carry; //Suma la velocidad sobre plataforma a la v.normal
hsp_carry = 0; //Igualamos a cero la v.sobre plataforma para que no siga sumando

//Colisión horizontal
if (place_meeting(x+hsp_final,y,obj_bloque))
{
    yplus = 0;
    while(place_meeting(x+hsp_final,y-yplus,obj_bloque) &amp;&amp; yplus &lt;= abs(1*hsp_final)) //Comprueba si nos podemos mover
        yplus += 1;
    if place_meeting(x+hsp_final,y-yplus,obj_bloque) //Si colisionamos con un bloque normal
    {
        while(!place_meeting(x+sign(hsp_final),y,obj_bloque)) //sign -1 o +1 Si no hay un muro a la derecha o a la izquierda
            x += sign(hsp_final); //Nos movemos
        hsp_final = 0;
        hsp = 0;
    }
    else
    {
        y -= yplus;
    }
}

x += hsp_final;

//Colisión vertical
if (place_meeting(x,y+vsp,obj_bloque))
{
    while(!place_meeting(x,y+sign(vsp),obj_bloque)) //Si no hay nada arriba o abajo
        y += sign(vsp); //Nos movemos
    vsp = 0;
}

//Colision enemigos
var inst = instance_place(x,y,obj_enemigo);
if (inst &amp;&amp; invencible != 1 &amp;&amp; powerup_activo != 2 &amp;&amp; inst.muerto == 0)
{
    if inst.aplastable == 0
    {
        scr_death();
    }
    else if inst.aplastable == 1
    {
        if (y &lt; inst.y - 4) //Colisiona por encima
        {
            vsp = -jsp; //Saltamos
            with (inst)
                instance_destroy(); //Destruimos el enemigo
        }
        else //Colisionamos por otro lado (morimos)
        {
            scr_death();
        }
    }
}

if (place_meeting(x,y,obj_bala_enemiga)) &amp;&amp; invencible != 1 &amp;&amp; powerup_activo != 2
{
    scr_death();
}

//Salto
if (place_meeting(x,y+1,obj_bloque) &amp;&amp; powerup_activo != 5) //Comprueba si el pixel de abajo es un bloque
//Si lo es, puede saltar, si está en el aire, no puede saltar
{
    if (tecla_salto)
    {
        sound_play(snd_salto);
        vsp = -jsp;
    }
}
else if (powerup_activo == 5) //Si tiene el powerup agua, puede saltar en el aire (nadar)
{
    if (tecla_salto)
    {
        sound_play(snd_salto);
        vsp = -jsp;
    }
    //Si con el pwagua, toca el suelo, camina más lento
    if (place_meeting(x,y+1,obj_bloque))
        msp = msp_pwagua_tierra;
    else
        msp = msp_pwastro;
}

//Muelle       
if (place_meeting(x,y,obj_muelle) &amp;&amp; powerup_activo != 2) //Cuando es fantasma no puede usar el muelle
{
    vsp = -jsp*1.5;
}

//Salto en pared
if (tecla_salto) &amp;&amp; (place_meeting(x-1,y,obj_bloque) &amp;&amp; powerup_activo != 2) || (place_meeting(x+1,y,obj_bloque) &amp;&amp; powerup_activo != 2) //Cuando es fantasma no puede saltar por las paredes
{
    if (tecla_salto)
    {
        sound_play(snd_salto);
        vsp = -jsp;
    }
}

//Escalera
if((tecla_arriba || tecla_abajo) &amp;&amp; powerup_activo != 2) //El fantasma no puede subir escaleras
{
    if (place_meeting(x,y,obj_escalera) &amp;&amp; !place_meeting(x,y+1,obj_bloque))
        escalera = true;
}

if (escalera)
{
    x = obj_escalera.x; //Coloca al heroe en el medio de la escalera
    vsp = 0;
    hsp = 0;
    if (tecla_arriba) &amp;&amp; !place_meeting(x,y-2,obj_bloque)
        vsp = -2;
    if (tecla_abajo) &amp;&amp; !place_meeting(x,y+2,obj_bloque)
        vsp = 2;
    if (!place_meeting(x,y,obj_escalera) || tecla_derecha || -tecla_izquierda || powerup_activo == 2)
        escalera = false;
    
}

y += vsp;

//Disparo
if (tecla_disparo == true)
{
    if (obj_heroe.powerup_activo != 2 &amp;&amp; invencible == 0)
    //El fantasma no puede disparar
    //Al salir del delfin tampoco
        with (instance_create(x, y, obj_bala))
        {
            sound_play(snd_disparo);
            if (obj_heroe.powerup_activo != 3 &amp;&amp; obj_heroe.powerup_activo != 5)
                speed = 8;
            else if (obj_heroe.powerup_activo == 3 || obj_heroe.powerup_activo == 5) //Si estamos en el espacio o en el agua, el disparo va más lento
                speed = 3;
            direction = obj_heroe.direccion; //Dirección en la que mira el heroe
            if (obj_heroe.direccion == 0)
                image_xscale = 1;
            else
                image_xscale = -1;
        }
}

//Cambio direccion sprite
if (movimiento != 0)
    image_xscale = movimiento; //Depende de la dirección del movimiento, orienta el sprite

//Animación (para que las físicas funcionen correctamente, todos los sprites deben tener idéntica máscara de colisión, editar en cada sprite manualmente)
if (invencible == 1)
    image_blend = c_red;
else
    image_blend = c_white;

//Powerups
if (place_meeting(x,y+1,obj_bloque))
{
    if (hsp != 0)
    {
        if (powerup_activo == 0)
        {
            sprite_index = spr_heroe_correr;
            image_speed = 1/4;
        }
        else if (powerup_activo == 1)
            sprite_index = spr_heroe_correr_pwsalto;
        else if (powerup_activo == 2)
            sprite_index = spr_heroe_pwfantasma;
        else if (powerup_activo == 3)
        {
            sprite_index = spr_heroe_correr_pwastro;
            image_speed = 1/4;
        }
        else if (powerup_activo == 4)
        {
            sprite_index = spr_heroe_correr_pwveloz;
        }
    }
    else
    {   if (powerup_activo == 0)
            sprite_index = spr_heroe;
        else if (powerup_activo == 1)
            sprite_index = spr_heroe_pwsalto;
        else if (powerup_activo == 2)
        {
            sprite_index = spr_heroe_pwfantasma;
            image_speed = 1/4;
        }
        else if (powerup_activo == 3)
            sprite_index = spr_heroe_pwastro;
        else if (powerup_activo == 4)
            sprite_index = spr_heroe_pwveloz;
    }
}
else if (place_meeting(x+1,y,obj_bloque) || place_meeting(x-1,y,obj_bloque))
{
    if (vsp != 0)
    {
        if (powerup_activo == 0)
            sprite_index = spr_heroe_pared;
        else if (powerup_activo == 1)
            sprite_index = spr_heroe_pared_pwsalto;
        else if (powerup_activo == 2)
        {
            sprite_index = spr_heroe_pwfantasma;
            image_speed = 1/4;
        }
        else if (powerup_activo == 3)
            sprite_index = spr_heroe_pared_pwastro;
        else if (powerup_activo == 4)
            sprite_index = spr_heroe_pared_pwveloz;
    }
    else
    {
        if (powerup_activo == 0)
            sprite_index = spr_heroe;
        else if (powerup_activo == 1)
            sprite_index = spr_heroe_pwsalto;
        else if (powerup_activo == 2)
        {
            sprite_index = spr_heroe_pwfantasma;
            image_speed = 1/4;
        }
        else if (powerup_activo == 3)
            sprite_index = spr_heroe_pwastro;
        else if (powerup_activo == 4)
            sprite_index = spr_heroe_pwastro;
    }
}
else if(escalera)
{
    if (tecla_arriba || tecla_abajo)
    {
        sprite_index = spr_heroe_escalera;
        image_speed = 1/8
    }
    else
    {
        sprite_index = spr_heroe_escalera;
        image_speed = 0; //No se anima
    }
        
}
else
{
    if (vsp &lt; 0) //estamos saltando
    {
        if (powerup_activo == 0)
            sprite_index = spr_heroe_salto;
        else if (powerup_activo == 1)
            sprite_index = spr_heroe_salto_pwsalto;
        else if (powerup_activo == 2)
        {
            sprite_index = spr_heroe_pwfantasma;
            image_speed = 1/4;
        }
        else if (powerup_activo == 3)
            sprite_index = spr_heroe_salto_pwastro;
        else if (powerup_activo == 4)
            sprite_index = spr_heroe_salto_pwveloz;
    }
    else
    {
        if (powerup_activo == 0)
            sprite_index = spr_heroe_cae;
        else if (powerup_activo == 1)
            sprite_index = spr_heroe_cae_pwsalto;
        else if (powerup_activo == 2)
        {
            sprite_index = spr_heroe_pwfantasma;
            image_speed = 1/4;
        }
        else if (powerup_activo == 3)
            sprite_index = spr_heroe_cae_pwastro;
        else if (powerup_activo == 4)
            sprite_index = spr_heroe_cae_pwveloz;
    }
}

//Movemos el fondo
if (background_hspeed[0] == 0)
    background_x[0] = view_xview[0]/1.5;
background_x[1] = view_xview[0]/3;
background_x[2] = view_xview[0]/9;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_guardar_nivel();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_death();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>11,15</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
