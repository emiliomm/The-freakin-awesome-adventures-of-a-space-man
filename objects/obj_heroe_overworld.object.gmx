<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_heroe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
for (var i = 0; i &lt; instance_number(obj_punto_mapamundi); i += 1)
{
    punto_mapamundi[i] = instance_find(obj_punto_mapamundi,i);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.joystick1_supported) { scr_joystick_support(); }

tecla_derecha = keyboard_check_pressed(ord("D")); // (0 a 1)
tecla_izquierda = keyboard_check_pressed(ord("A")); // (0 a -1)
tecla_arriba = keyboard_check_pressed(ord("W"));
tecla_abajo = keyboard_check_pressed(ord("S"));

var direccion = -1;
var inst;

if tecla_derecha
{
    inst = instance_position(x,y,obj_punto_mapamundi);
    if inst != noone
    {
        direccion = inst.derecha;
        if direccion != -1
        {
            for (i = 0; i &lt; array_length_1d(punto_mapamundi); i += 1)
            {
                if punto_mapamundi[i].numero == direccion &amp;&amp; punto_mapamundi[i].desbloqueado == true
                {
                    x = punto_mapamundi[i].x;
                    y = punto_mapamundi[i].y;
                    global.fase_actual = punto_mapamundi[i].numero_fase;
                }
            }
        }
    }
}
if tecla_izquierda
{
    inst = instance_position(x,y,obj_punto_mapamundi);
    if inst != noone
    {
        direccion = inst.izquierda;
        if direccion != -1
        {
            for (i = 0; i &lt; array_length_1d(punto_mapamundi); i += 1)
            {
                if punto_mapamundi[i].numero == direccion &amp;&amp; punto_mapamundi[i].desbloqueado == true
                {
                    x = punto_mapamundi[i].x;
                    y = punto_mapamundi[i].y;
                    global.fase_actual = punto_mapamundi[i].numero_fase;
                }
            }
        }
    }
}
if tecla_arriba
{
    inst = instance_position(x,y,obj_punto_mapamundi);
    if inst != noone
    {
        direccion = inst.arriba;
        if direccion != -1
        {
            for (i = 0; i &lt; array_length_1d(punto_mapamundi); i += 1)
            {
                if punto_mapamundi[i].numero == direccion &amp;&amp; punto_mapamundi[i].desbloqueado == true
                {
                    x = punto_mapamundi[i].x;
                    y = punto_mapamundi[i].y;
                    global.fase_actual = punto_mapamundi[i].numero_fase;
                }
            }
        }
    }
}
if tecla_abajo
{
    inst = instance_position(x,y,obj_punto_mapamundi);
    if inst != noone
    {
        direccion = inst.abajo;
        if direccion != -1
        {
            for (i = 0; i &lt; array_length_1d(punto_mapamundi); i += 1)
            {
                if punto_mapamundi[i].numero == direccion &amp;&amp; punto_mapamundi[i].desbloqueado == true
                {
                    x = punto_mapamundi[i].x;
                    y = punto_mapamundi[i].y;
                    global.fase_actual = punto_mapamundi[i].numero_fase;
                }
            }
        }
    }
}




var push;
push = max(keyboard_check_released(vk_enter),keyboard_check_released(vk_space),0);

if (push == 1) //Ejecutamos el script si pulsamos los botones de arriba
    room_goto ( rm_nv );


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self(); 
draw_set_font(fnt_cartel);
draw_text(x,y-50,scr_nivel_actual(2));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
