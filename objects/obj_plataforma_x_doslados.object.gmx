<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_plataforma_x_doslados</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_bloque</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = -1;

///Crear variables

dir = 0; //-1 = derecha, 1 = izquierda
msp = 1;
hsp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mask_index = spr_plataforma_x_doslados; //La mascara de colisión se inicia al principio para que la colisión horizontal funciona

hsp = dir * msp;

//Colisión horizontal
if (place_meeting(x+hsp,y,obj_bloque)) //Con el bloque
{
    while(!place_meeting(x+sign(hsp),y,obj_bloque)) //sign -1 o +1. Si no hay un muro a la derecha o a la izquierda
        x += sign(hsp); //Nos movemos
    hsp = 0;
}

if (place_meeting(x+hsp,y,obj_bloque_invisible))
{
    while(!place_meeting(x+sign(hsp),y,obj_bloque_invisible)) //Si no hay nada arriba o abajo
        x += sign(hsp); //Nos movemos
    hsp = 0;
}

x += hsp;

if (instance_exists(obj_heroe)) //Comprueba si el jugador existe, para no crashear el juego
{
        
        if (round(obj_heroe.y + (obj_heroe.sprite_height/2)) &gt; y)//Si los pies del heroe están inmediatamente debajo de la plataforma
        //round = redondea para que funcione perfectamente
        //o apretamos la tecla_abajo
            mask_index = -1; //Quita el sprite y por tanto la máscara de colisión
        else //Si los pies del heroe estan encima de la plataforma
        {
            mask_index = spr_plataforma_x_doslados; //El objeto tiene las colisiones predeterminadas

            if place_meeting(x,y-1,obj_heroe) //Comprueba si el heroe está encima
            {
                obj_heroe.hsp_carry = hsp; //Iguala la velocidad del jugador a la de la plataforma
                
                //Impide que se enganche al sumar un número multiplicado por la direccion
                if round(obj_heroe.x + 1*dir) &lt;= x
                {
                    dir = -1;
                }
                else
                {
                    dir = 1;
                }
                
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dir == -1
    draw_sprite(spr_plataforma_x_doslados,1,x,y);
else if dir == 1
    draw_sprite(spr_plataforma_x_doslados,2,x,y);
else
    draw_sprite(spr_plataforma_x_doslados,0,x,y);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
